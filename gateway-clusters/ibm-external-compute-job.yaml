apiVersion: v1
kind: ServiceAccount
metadata:
  name: ibm-external-compute-job
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ibm-external-compute-job
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ibm-external-compute-job
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ibm-external-compute-job
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: ibm-external-compute-job
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: kube-system
  name: ibm-external-compute-job
rules:
- apiGroups: ["apps", "extensions"]
  resources: ["daemonsets"]
  resourceNames: ["calico-node", "ibm-gateway-controller"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ibm-external-compute-job
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ibm-external-compute-job
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: ibm-external-compute-job
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ibm-external-compute-job
  namespace: kube-system
spec:
  template:
    spec:
      imagePullSecrets:
      - name: ibm-external-compute-image-pull
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
      - name: provision
        image: &image us.icr.io/armada-master/armada-stranger:v1.0.25
        env:
        - name: IMAGE_URL
          value: *image
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command: ["ansible-playbook"]
        args:
        - "-i"
        - "/config/inventory"
        - "setup.yml"
        volumeMounts:
        - name: calico-etcd-secrets
          mountPath: /ansible/roles/calico-node/files
          readOnly: true
        - name: ibm-external-compute-pk
          mountPath: /home/appuser/.ssh
          readOnly: true
        - name: ibm-external-compute-config
          mountPath: /config
          readOnly: true
        - name: cluster-info
          mountPath: /cluster-info
          readOnly: true
      restartPolicy: Never
      volumes:
      - name: calico-etcd-secrets
        secret:
          secretName: calico-etcd-secrets
      - name: ibm-external-compute-pk
        secret:
          secretName: ibm-external-compute-pk
          defaultMode: 0400
      - name: ibm-external-compute-config
        configMap:
          name: ibm-external-compute-config
      - name: cluster-info
        configMap:
          name: cluster-info
      serviceAccountName: ibm-external-compute-job
  backoffLimit: 0
